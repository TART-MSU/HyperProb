builder = stormpy.ExactSparseMatrixBuilder(rows=0, columns=0, entries=0, force_dimensions=False, has_custom_row_grouping=True, row_groups=0)

builder.new_row_group(0)
builder.add_next_value(0, 1, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(0, 2, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(1, 1, stormpy.Rational(0.6666666666666666))
builder.add_next_value(1, 2, stormpy.Rational(0.3333333333333333))

builder.new_row_group(2)
builder.add_next_value(2, 3, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(2, 4, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(3, 3, stormpy.Rational(0.6666666666666666))
builder.add_next_value(3, 4, stormpy.Rational(0.3333333333333333))

builder.new_row_group(4)
builder.add_next_value(4, 4, stormpy.Rational(1))

builder.new_row_group(5)
builder.add_next_value(5, 5, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(5, 6, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(6, 5, stormpy.Rational(0.6666666666666666))
builder.add_next_value(6, 6, stormpy.Rational(0.3333333333333333))

builder.new_row_group(7)
builder.add_next_value(7, 6, stormpy.Rational(1))

builder.new_row_group(8)
builder.add_next_value(8, 7, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(8, 8, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(9, 7, stormpy.Rational(0.6666666666666666))
builder.add_next_value(9, 8, stormpy.Rational(0.3333333333333333))

builder.new_row_group(10)
builder.add_next_value(10, 8, stormpy.Rational(1))

builder.new_row_group(11)
builder.add_next_value(11, 9, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(11, 10, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(12, 9, stormpy.Rational(0.6666666666666666))
builder.add_next_value(12, 10, stormpy.Rational(0.3333333333333333))

builder.new_row_group(13)
builder.add_next_value(13, 10, stormpy.Rational(1))

builder.new_row_group(14)
builder.add_next_value(14, 11, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(14, 12, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(15, 11, stormpy.Rational(0.6666666666666666))
builder.add_next_value(15, 12, stormpy.Rational(0.3333333333333333))

builder.new_row_group(16)
builder.add_next_value(16, 12, stormpy.Rational(1))

builder.new_row_group(17)
builder.add_next_value(17, 13, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(17, 14, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(18, 13, stormpy.Rational(0.6666666666666666))
builder.add_next_value(18, 14, stormpy.Rational(0.3333333333333333))

builder.new_row_group(19)
builder.add_next_value(19, 14, stormpy.Rational(1))

builder.new_row_group(20)
builder.add_next_value(20, 15, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(20, 16, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(21, 15, stormpy.Rational(0.6666666666666666))
builder.add_next_value(21, 16, stormpy.Rational(0.3333333333333333))

builder.new_row_group(22)
builder.add_next_value(22, 16, stormpy.Rational(1))

builder.new_row_group(23)
builder.add_next_value(23, 17, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(23, 18, stormpy.Rational(1)/ stormpy.Rational(2))
builder.add_next_value(24, 17, stormpy.Rational(0.6666666666666666))
builder.add_next_value(24, 18, stormpy.Rational(0.3333333333333333))

builder.new_row_group(25)
builder.add_next_value(25, 18, stormpy.Rational(1))

builder.new_row_group(26)
builder.add_next_value(26, 19, stormpy.Rational(1))

builder.new_row_group(27)
builder.add_next_value(27, 20, stormpy.Rational(1))

builder.new_row_group(28)
builder.add_next_value(28, 19, stormpy.Rational(1))

builder.new_row_group(29)
builder.add_next_value(29, 20, stormpy.Rational(1))

transition_matrix = builder.build()
state_labeling = initial_mod.labeling
components = stormpy.SparseExactModelComponents(transition_matrix=transition_matrix, state_labeling=state_labeling)
mdp = stormpy.storage.SparseExactMdp(components)
initial_model = mdp
return initial_model
